{"ast":null,"code":"var _jsxFileName = \"/Users/jeon-yong-gyu/Documents/GitHub/simpledirary/src/OptimizeTest.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextView = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  useEffect(() => {\n    console.log(text);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = TextView;\n\nconst CountView = _ref2 => {\n  _s2();\n\n  let {\n    count\n  } = _ref2;\n  useEffect(() => {\n    console.log(count);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(CountView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = CountView;\n\nconst OptimizeTest = () => {\n  _s3();\n\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CountView, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextView, {\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(OptimizeTest, \"dNtZfp4oyj4N/7iJZUhPAuJHtEE=\");\n\n_c4 = OptimizeTest;\nexport default OptimizeTest;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TextView$React.memo\");\n$RefreshReg$(_c2, \"TextView\");\n$RefreshReg$(_c3, \"CountView\");\n$RefreshReg$(_c4, \"OptimizeTest\");","map":{"version":3,"names":["React","useState","useEffect","TextView","memo","text","console","log","CountView","count","OptimizeTest","setCount","setText","padding","e","target","value"],"sources":["/Users/jeon-yong-gyu/Documents/GitHub/simpledirary/src/OptimizeTest.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\n\nconst TextView = React.memo(({text}) => {\n    useEffect(()=>{\n        console.log(text);\n    });\n    return <div>{text}</div>\n});\n\nconst CountView = ({count}) => {\n    useEffect(()=>{\n        console.log(count);\n    })\n    return <div>{count}</div>\n}\n\nconst OptimizeTest = () => {\n\n    const [count, setCount] = useState(1);\n    const [text, setText] = useState(\"\");\n\n    return (\n        <div style={{padding:50}}>\n            <div>\n                <h2>Count</h2>\n                <CountView count={count}/>\n                <button onClick={() => setCount(count +1)}>+</button>\n            </div>\n            <div>\n                <h2>Text</h2>\n                <TextView text={text}/>\n                <input value={text} onChange={(e)=>setText(e.target.value)}/>\n            </div>\n        </div>\n    );\n};\n\nexport default OptimizeTest;"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,iCAAGH,KAAK,CAACI,IAAN,SAAW,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EACpCH,SAAS,CAAC,MAAI;IACVI,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACH,CAFQ,CAAT;EAGA,oBAAO;IAAA,UAAMA;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CALgB,kCAAH,iCAAd;;MAAMF,Q;;AAON,MAAMK,SAAS,GAAG,SAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAC3BP,SAAS,CAAC,MAAI;IACVI,OAAO,CAACC,GAAR,CAAYE,KAAZ;EACH,CAFQ,CAAT;EAGA,oBAAO;IAAA,UAAMA;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CALD;;IAAMD,S;;MAAAA,S;;AAON,MAAME,YAAY,GAAG,MAAM;EAAA;;EAEvB,MAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACI,IAAD,EAAOO,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;EAEA,oBACI;IAAK,KAAK,EAAE;MAACY,OAAO,EAAC;IAAT,CAAZ;IAAA,wBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,SAAD;QAAW,KAAK,EAAEJ;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,OAAO,EAAE,MAAME,QAAQ,CAACF,KAAK,GAAE,CAAR,CAA/B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,QAAD;QAAU,IAAI,EAAEJ;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,KAAK,EAAEA,IAAd;QAAoB,QAAQ,EAAGS,CAAD,IAAKF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;MAA1C;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CAnBD;;IAAMN,Y;;MAAAA,Y;AAqBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}